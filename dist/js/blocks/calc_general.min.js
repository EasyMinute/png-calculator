/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!***********************************!*\
  !*** ./js/blocks/calc_general.js ***!
  \***********************************/
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
document.addEventListener('DOMContentLoaded', function () {
  // Listen for clicks on all buttons with the class 'pngcalc_stepper'
  document.querySelectorAll('.pngcalc_button.pngcalc_stepper').forEach(function (button) {
    button.addEventListener('click', function (e) {
      e.preventDefault();
      var form = document.getElementById('png-calculator-form'); // Replace with your form's ID
      var formInputs = form.querySelectorAll('#product_quantity');
      if (_toConsumableArray(formInputs).some(function (input) {
        return input.classList.contains('invalid');
      })) {
        console.log("Form has invalid fields. Stopping AJAX.");
        return; // Stop the function
      }

      var step = this.getAttribute('data-step'); // Get the 'data-step' attribute of the button

      // Hide all elements with the class 'pngcalc__step'
      document.querySelectorAll('.pngcalc__step').forEach(function (stepElement) {
        stepElement.classList.add('hidden');
      });

      // Show the element with the matching 'data-step'
      var targetStep = document.querySelector(".pngcalc__step[data-step=\"".concat(step, "\"]"));
      if (targetStep) {
        targetStep.classList.remove('hidden');
      }
    });
  });
  var popupTrigger = document.querySelector('#png-calculator-popup-trigger');
  if (popupTrigger) {
    popupTrigger.addEventListener('click', function (e) {
      e.preventDefault();
      var popupCalc = document.querySelector('#png-calculator-popup');
      console.log('popupCalc', popupCalc);
      if (popupCalc) {
        popupCalc.classList.add('active');
      }
    });
  }
  document.addEventListener('click', function (e) {
    var popupCalc = document.querySelector('#png-calculator-popup');
    var calculatorSection = document.querySelector('#png-calculator');
    if (popupCalc && calculatorSection) {
      // Check if the click target is outside the calculator section
      if (!calculatorSection.contains(e.target) && !e.target.closest('#png-calculator-popup-trigger')) {
        popupCalc.classList.remove('active');
      }
    }
  });
  var closerCalc = document.querySelector('#png-calculator__closer');
  if (closerCalc) {
    closerCalc.addEventListener('click', function (e) {
      e.preventDefault();
      var popupCalc = document.querySelector('#png-calculator-popup');
      var calculatorSection = document.querySelector('#png-calculator');
      if (popupCalc && calculatorSection) {
        popupCalc.classList.remove('active');
      }
    });
  }
});
/******/ })()
;