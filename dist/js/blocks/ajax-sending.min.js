/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!***********************************!*\
  !*** ./js/blocks/ajax-sending.js ***!
  \***********************************/
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
document.addEventListener('DOMContentLoaded', function () {
  var form = document.getElementById('png-calculator-form'); // Replace with your form's ID
  if (form) {
    form.addEventListener('submit', function (e) {
      var _document$getElementB, _document$getElementB2;
      e.preventDefault();
      var formData = new FormData(form);
      var totalPrice = ((_document$getElementB = document.getElementById('totalPrice')) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.textContent.trim()) || '0';
      var totalSum = ((_document$getElementB2 = document.getElementById('totalSum')) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.textContent.trim()) || '0';
      var formInputs = form.querySelectorAll('input');
      if (_toConsumableArray(formInputs).some(function (input) {
        return input.classList.contains('invalid');
      })) {
        console.log("Form has invalid fields. Stopping AJAX.");
        return; // Stop the function
      }

      // Append them to FormData
      formData.append('totalPrice', totalPrice);
      formData.append('totalSum', totalSum);

      // Extract values from dynamically created selects
      var printFormats = [];
      var printTypes = [];
      document.querySelectorAll('.printFormat.select2-hidden-accessible').forEach(function (select) {
        printFormats.push(select.value);
        console.log('select', select);
      });
      document.querySelectorAll('.printType.select2-hidden-accessible').forEach(function (select) {
        printTypes.push(select.value);
      });

      // Append to FormData as arrays
      formData.append('printFormats', JSON.stringify(printFormats));
      formData.append('printTypes', JSON.stringify(printTypes));
      var xhr = new XMLHttpRequest();

      // Adding a special parameter 'action' to indicate which action to call
      formData.append('action', 'send_to_crm_action');

      // Debugging
      console.log('FormData:', Object.fromEntries(formData.entries()));
      xhr.open('POST', ajaxurl, true); // WordPress automatically provides `ajaxurl` in admin.
      xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');
      xhr.onreadystatechange = function () {
        if (xhr.readyState === 4 && xhr.status === 200) {
          // alert('Форму надіслано!');
          console.log('CRM data sent successfully:', xhr.responseText);
          // **Clear all form fields**
          // form.reset();
          document.querySelectorAll('.pngcalc_label input').forEach(function (input) {
            input.value = '';
          });

          // **Clear dynamically created selects**
          // document.querySelectorAll('.printFormat, .printType').forEach(select => {
          //     select.value = '';
          // });
          // **Clear displayed total price & total sum (if necessary)**
          if (document.getElementById('totalPrice')) {
            document.getElementById('totalPrice').textContent = '0';
          }
          if (document.getElementById('totalSum')) {
            document.getElementById('totalSum').textContent = '0';
          }
          document.querySelectorAll('.pngcalc__step').forEach(function (stepElement) {
            stepElement.classList.add('hidden');
          });
          var targetStep = document.querySelector(".pngcalc__step[data-step=\"final\"]");
          targetStep.classList.remove('hidden');
        } else if (xhr.readyState === 4) {
          alert('Помилка надсилання');
          console.error('Error sending data to CRM:', xhr.status, xhr.statusText);
          console.log('xhr', xhr);
        }
      };
      xhr.send(formData);
    });
  }
});
/******/ })()
;